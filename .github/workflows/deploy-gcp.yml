name: Deploy to GCP

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - staging
          - production

env:
  TF_VERSION: '1.6.0'
  WORKING_DIR: './gcp'

jobs:
  terraform:
    name: 'Terraform ${{ github.event.inputs.action }} - GCP'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: Create GCP credentials file
        run: |
          mkdir -p secrets
          echo '${{ secrets.GCP_CREDENTIALS }}' > secrets/credentials.json
          chmod 600 secrets/credentials.json
      
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      
      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_credentials_file: "secrets/credentials.json"
          TF_VAR_vscode_password: ${{ secrets.VSCODE_PASSWORD }}
          TF_VAR_vscode_domain: ${{ secrets.VSCODE_DOMAIN }}
          TF_VAR_letsencrypt_email: ${{ secrets.LETSENCRYPT_EMAIL }}
          TF_VAR_environment: ${{ github.event.inputs.environment }}
        continue-on-error: true
      
      - name: Comment Plan on PR
        if: github.event_name == 'pull_request' && steps.plan.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“– \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_credentials_file: "secrets/credentials.json"
          TF_VAR_vscode_password: ${{ secrets.VSCODE_PASSWORD }}
          TF_VAR_vscode_domain: ${{ secrets.VSCODE_DOMAIN }}
          TF_VAR_letsencrypt_email: ${{ secrets.LETSENCRYPT_EMAIL }}
          TF_VAR_environment: ${{ github.event.inputs.environment }}
      
      - name: Output Terraform Results
        if: github.event.inputs.action == 'apply'
        run: terraform output -json > terraform-outputs.json
      
      - name: Upload Terraform Outputs
        if: github.event.inputs.action == 'apply'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs-gcp
          path: ${{ env.WORKING_DIR }}/terraform-outputs.json
          retention-days: 30
      
      - name: Cleanup credentials
        if: always()
        run: |
          rm -f secrets/credentials.json
          rm -f tfplan
